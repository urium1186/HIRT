<UserControl x:Class="HaloInfiniteResearchTools.Controls.CheckedTreeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:HaloInfiniteResearchTools.Controls"
             xmlns:model="clr-namespace:HaloInfiniteResearchTools.Models"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <controls:SearchBox Grid.Row="0"
                                TextChangedCommand="{Binding SearchTermChangedCommand}" />

            
                <!-- ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Families}"-->
                <TreeView x:Name="treeView" Grid.Row="1"
                          VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  VirtualizingPanel.IsContainerVirtualizable="True"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                          >
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type model:TreeViewItemModel}" ItemsSource="{Binding Children}" >
                            <CheckBox Content="{Binding Header}" IsChecked="{Binding Path=(controls:ItemHelper.IsChecked), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <CheckBox.Style>
                                    <Style TargetType="{x:Type CheckBox}">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(controls:ItemHelper.IsChecked)}" Value="False" >
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type model:TreeViewItemChModel}" >
                            <CheckBox Content="{Binding Header}" IsChecked="{Binding Path=(controls:ItemHelper.IsChecked), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <CheckBox.Style>
                                    <Style TargetType="{x:Type CheckBox}">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(controls:ItemHelper.IsChecked)}" Value="False" >
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                        </DataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="False"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
        </Grid>
    </Grid>
</UserControl>
